{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helpers/validateform';\nlet SignupComponent = class SignupComponent {\n  constructor(fb, auth, router) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  ngOnInit() {\n    this.signupForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSignUp() {\n    if (this.signupForm.valid) {\n      console.log(this.signupForm.value);\n      this.auth.signUp(this.signupForm.value).subscribe({\n        next: res => {\n          alert(res.message);\n          this.signupForm.reset();\n        },\n        error: err => {\n          alert(err?.error.message);\n        }\n      });\n    } else {\n      ValidateForm.validateAllFormFields(this.signupForm);\n      alert(\"Your form is invalid\");\n    }\n  }\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAA8CC,UAAU,QAAQ,gBAAgB;AAChF,OAAOC,YAAY,MAAM,8BAA8B;AAQhD,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAO1BC,YAAoBC,EAAe,EAAUC,IAAiB,EAAUC,MAAc;IAAlE,OAAE,GAAFF,EAAE;IAAuB,SAAI,GAAJC,IAAI;IAAuB,WAAM,GAANC,MAAM;IAL9E,SAAI,GAAW,UAAU;IACzB,WAAM,GAAY,KAAK;IACvB,YAAO,GAAW,cAAc;EAGyD;EAEzFC,QAAQ;IAEN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAE;MAC/BC,SAAS,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ,CAAC;MACnCE,KAAK,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,QAAQ,CAAC;MAChCG,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACW,QAAQ,CAAC;MACnCI,QAAQ,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACW,QAAQ;KACnC,CAAC;EAEJ;EAEAK,QAAQ;IACN,IAAG,IAAI,CAACR,UAAU,CAACS,KAAK,EAAC;MACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,UAAU,CAACY,KAAK,CAAC;MAClC,IAAI,CAACf,IAAI,CAACgB,MAAM,CAAC,IAAI,CAACb,UAAU,CAACY,KAAK,CAAC,CAACE,SAAS,CAAC;QAChDC,IAAI,EAAEC,GAAG,IAAG;UACVC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;UAClB,IAAI,CAAClB,UAAU,CAACmB,KAAK,EAAE;QACzB,CAAC;QACDC,KAAK,EAAEC,GAAG,IAAG;UACXJ,KAAK,CAACI,GAAG,EAAED,KAAK,CAACF,OAAO,CAAC;QAC3B;OACD,CAAC;KACH,MAAI;MAEHzB,YAAY,CAAC6B,qBAAqB,CAAC,IAAI,CAACtB,UAAU,CAAC;MACnDiB,KAAK,CAAC,sBAAsB,CAAC;;EAEjC;EAEAM,YAAY;IACV,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;IAC1B,IAAI,CAACA,MAAM,GAAG,IAAI,CAACC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAACA,OAAO,GAAG,cAAc;IACrE,IAAI,CAACD,MAAM,GAAG,IAAI,CAACE,IAAI,GAAG,MAAM,GAAG,IAAI,CAACA,IAAI,GAAG,UAAU;EAC3D;CAED;AA9CYhC,eAAe,eAL3BH,SAAS,CAAC;EACToC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWnC,eAAe,CA8C3B;SA9CYA,eAAe","names":["Component","Validators","ValidateForm","SignupComponent","constructor","fb","auth","router","ngOnInit","signupForm","group","firstname","required","lastname","email","username","password","onSignUp","valid","console","log","value","signUp","subscribe","next","res","alert","message","reset","error","err","validateAllFormFields","hideShowPass","isText","eyeIcon","type","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\jomel\\source\\angular\\angular_auth\\AngularAuthUI\\src\\app\\components\\signup\\signup.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helpers/validateform';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  type: string = \"password\";\n  isText: boolean = false;\n  eyeIcon: string = \"fa-eye-slash\";\n  signupForm!: FormGroup;\n\n  constructor(private fb: FormBuilder, private auth: AuthService, private router: Router){ }\n\n  ngOnInit(): void {\n\n    this.signupForm = this.fb.group ({\n      firstname: ['', Validators.required], \n      lastname: ['', Validators.required],\n      email: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n    \n  }\n\n  onSignUp(): void{\n    if(this.signupForm.valid){\n      console.log(this.signupForm.value);\n      this.auth.signUp(this.signupForm.value).subscribe({\n        next:(res)=>{\n          alert(res.message)\n          this.signupForm.reset();\n        },\n        error:(err)=>{\n          alert(err?.error.message)\n        }\n      });\n    }else{\n\n      ValidateForm.validateAllFormFields(this.signupForm);\n      alert(\"Your form is invalid\")\n    }\n  }\n\n  hideShowPass(){\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}